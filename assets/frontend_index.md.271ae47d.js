import{_ as s,k as n,l as a,W as e}from"./chunks/framework.50c4d085.js";const u=JSON.parse('{"title":"前端","description":"","frontmatter":{"title":"前端","tags":["HTML","JS","CSS","ES6","NPM"],"order":2,"sidebar":true},"headers":[],"relativePath":"frontend/index.md","filePath":"frontend/index.md","lastUpdated":1690265295000}'),o={name:"frontend/index.md"},l=e(`<h1 id="frontend" tabindex="-1">FrontEnd <a class="header-anchor" href="#frontend" aria-label="Permalink to &quot;FrontEnd&quot;">​</a></h1><h2 id="获取src属性" tabindex="-1">获取src属性 <a class="header-anchor" href="#获取src属性" aria-label="Permalink to &quot;获取src属性&quot;">​</a></h2><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">img</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">a.png</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">alt</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(img</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getAttribute</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">src</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)) </span><span style="color:#676E95;font-style:italic;">// a.png</span></span>
<span class="line"><span style="color:#A6ACCD;">  console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(img</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">src) </span><span style="color:#676E95;font-style:italic;">// http://xxx/a.png</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><ul><li><p><code>dom.attribute(&#39;src&#39;)</code> 获取到的永远是 <code>HTML</code> 中的元素 <code>src</code></p></li><li><p><code>dom.src</code> 获取解析之后的绝对 <code>URL</code>，即使 <code>HTML</code> 中的内容是相对 <code>URL</code></p></li><li><p>该规则同样适用于 <code>script</code>、<code>link</code> 等带有 <code>src</code>、<code>href</code> 的元素</p></li></ul>`,4),p=[l];function t(c,r,i,d,D,F){return n(),a("div",null,p)}const m=s(o,[["render",t]]);export{u as __pageData,m as default};
